{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "./RIDP-Request-schema.json",
    "title": "Remote Identity Proofing (RIDP) (RJ139) - Request Schema",
    "description": "The RIDP service allows for identity proofing an Applicant seeking to register with the Marketplace.",
    "type": "object",
    "$comment": "Define root as ridpRequest",
    "required": ["ridpRequest"],
    "additionalProperties": false,
    "properties": {
        "ridpRequest": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "primaryRequest": {"$ref": "#/definitions/primaryRequestType"},
                "secondaryRequest": {"$ref": "#/definitions/secondaryRequestType"}
            }
        }
    },
    "definitions": {
        "primaryRequestType": {
            "description": "RIDP Primary Request. Part of a mutex with RIDP Secondary Request.",
            "type": "object",
            "required": [
                "person",
                "contactInformation"
            ],
            "additionalProperties": false,
            "properties": {
                "person": {"$ref": "#/definitions/personType"},
                "contactInformation": {"$ref": "#/definitions/contactInformationType"},
                "levelOfProofingCode": {
                    "description": "Identifies level of questions Requester chose for individual being identity proofed.",
                    "type": "string",
                    "enum": [
                        "LevelTwo",
                        "LevelThree",
                        "OptionThree"
                    ]
                },
                "subscriberNumber": {
                    "description": "The subscriber number (Sub Code) of the Requester.",
                    "type": "string",
                    "minLength": 7,
                    "maxLength": 7,
                    "pattern": "^([0-9]{7})$"
                }
            }
        },
        "personType": {
            "description": "Container for personal information about an individual",
            "type": "object",
            "required": [
                "personGivenName",
                "personSurName"
            ],
            "additionalProperties": false,
            "properties": {
                "personBirthDate": {
                    "description": "Date of birth of a person; YYYY-MM-DD",
                    "type": "string",
                    "pattern": "((((19|2[0-9])([2468][048]|[13579][26]|0[48])|2[048]00)-02-29|((19|2[0-9])[0-9]{2}-(0[469]|11)-(0[1-9]|[12][0-9]|30)|(19|2[0-9])[0-9]{2}-(0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01])|(19|2[0-9])[0-9]{2}-02-(0[1-9]|1[0-9]|2[0-8]))))"
                },
                "personGivenName": {
                    "description": "First name of person",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^([a-zA-Z]{1,32})$"
                },
                "personMiddleName": {
                    "description": "Middle name of person",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^([a-zA-Z]{1,32})$"
                },
                "personSurName": {
                    "description": "Last name of person",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32,
                    "pattern": "^([a-zA-Z \\-'\\s]*\\S[a-zA-Z \\-'\\s]*)$"
                },
                "personSuffixName": {
                    "description": "Suffix for a person's name",
                    "type": "string",
                    "maxLength": 3
                },
                "personSocialSecurityNumber": {
                    "description": "A person's Social Security Number",
                    "type": "string",
                    "pattern": "^(\\d{3}-\\d{2}-\\d{4}|\\d{9}|\\d{4})$"
                },
                "personPreferredLanguage": {
                    "description": "A capacity of a person for a language with which that person has the strongest preference. eng - English; spa - Spanish.",
                    "type": "string",
                    "enum": [
                        "spa",
                        "eng"
                    ]
                }
            }
        },
        "contactInformationType": {
            "description": "Container for contact information about individual being proofed.",
            "type": "object",
            "required": [
                "streetName",
                "cityName",
                "usStateCode",
                "zipCode"
            ],
            "additionalProperties": false,
            "properties": {
                "streetName": {
                    "description": "A road, thoroughfare or highway.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 60,
                    "pattern": "^([a-zA-Z0-9# \\- / \\.]{1,60})$"
                },
                "cityName": {
                    "description": "A name of a city or town.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 40,
                    "pattern": "^([a-zA-Z \\.]{1,40})$"
                },
                "zipCode": {
                    "description": "An identifier of a post office-assigned zone for an address.",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 5,
                    "pattern": "^([\\d]{5})$"
                },
                "zipCodeExtension": {
                    "description": "An identifier of a smaller area within a post office-assigned zone for an address.",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^([\\d]{4})$"
                },
                "telephoneNumber": {
                    "description": "A telephone number..",
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 13,
                    "pattern": "^([a-zA-Z0-9\\(\\)\\-]{10,13})$"
                },
                "usStateCode": {
                    "type": "string",
                    "description": "A state, commonwealth, province, or other such geopolitical subdivision of the United States of America. AA - Armed Forces Americas (except Canada). AE - Armed Forces Africa, Canada, Europe, Middle East. AK - ALASKA. AL - ALABAMA. AP - Armed Forces Pacific. AR - ARKANSAS. AS - AMERICAN SAMOA. AZ - ARIZONA . CA - CALIFORNIA. CO - COLORADO. CT - CONNECTICUT. DC - DISTRICT OF COLUMBIA. DE - DELAWARE. FL - FLORIDA. FM - FEDERATED STATES OF MICRONESIA. GA - GEORGIA. GU - GUAM. HI - HAWAII. IA - IOWA. ID - IDAHO. IL - ILLINOIS. IN - INDIANA. KS - KANSAS. KY - KENTUCKY. LA - LOUISIANA. MA - MASSACHUSETTS. MD - MARYLAND. ME - MAINE. MH - MARSHALL ISLANDS. MI - MICHIGAN. MN - MINNESOTA. MO - MISSOURI. MP - NORTHERN MARIANA ISLANDS. MS - MISSISSIPPI. MT - MONTANA. NC - NORTH CAROLINA. ND - NORTH DAKOTA. NE - NEBRASKA. NH - NEW HAMPSHIRE. NJ - NEW JERSEY. NM - NEW MEXICO. NV - NEVADA. NY - NEW YORK. OH - OHIO. OK - OKLAHOMA. OR - OREGON. PA - PENNSYLVANIA. PR - PUERTO RICO. PW - PALAU. RI - RHODE ISLAND. SC - SOUTH CAROLINA. SD - SOUTH DAKOTA. TN - TENNESSEE. TX - TEXAS. UT - UTAH. VA - VIRGINIA . VI - VIRGIN ISLANDS. VT - VERMONT. WA - WASHINGTON. WI - WISCONSIN. WV - WEST VIRGINIA. WY - WYOMING. ",
                    "enum": [
                        "AA",
                        "AE",
                        "AK",
                        "AL",
                        "AP",
                        "AR",
                        "AS",
                        "AZ",
                        "CA",
                        "CO",
                        "CT",
                        "DC",
                        "DE",
                        "FL",
                        "FM",
                        "GA",
                        "GU",
                        "HI",
                        "IA",
                        "ID",
                        "IL",
                        "IN",
                        "KS",
                        "KY",
                        "LA",
                        "MA",
                        "MD",
                        "ME",
                        "MH",
                        "MI",
                        "MN",
                        "MO",
                        "MP",
                        "MS",
                        "MT",
                        "NC",
                        "ND",
                        "NE",
                        "NH",
                        "NJ",
                        "NM",
                        "NV",
                        "NY",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "PR",
                        "PW",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "UT",
                        "VA",
                        "VI",
                        "VT",
                        "WA",
                        "WI",
                        "WV",
                        "WY"
                    ]
                }
            }
        },
        "secondaryRequestType": {
            "description": "RIDP Secondary Request. Part of a mutex with RIDP Primary Request.",
            "type": "object",
            "required": [
                "verificationAnswerArray",
                "sessionIdentification",
                "hubReferenceNumber"
            ],
            "additionalProperties": false,
            "properties": {
                "verificationAnswerArray": {
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 5,
                    "items": {"$ref": "#/definitions/verificationAnswerArrayType"}
                },
                "sessionIdentification": {
                    "description": "Session ID used to tie subsequent submissions to the initial inquiry.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 70,
                    "pattern": "^([a-zA-Z0-9# \\- / \\.]{1,70})$"
                },
                "hubReferenceNumber": {
                    "description": "A unique number generated by the Hub to identify a Remote Identity proofing request.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 90
                }
            }
        },
        "verificationAnswerArrayType": {
            "description": "A collection of questions and answers submitted to the Hub",
            "type": "object",
            "required": ["verificationAnswerSet"],
            "additionalProperties": false,
            "properties": {
                "verificationAnswerSet": {
					"required": ["verificationAnswer", "verificationQuestionNumber"],
                    "properties": {
                        "verificationAnswer": {
                            "description": "Answers to individual questions.",
                            "type": "string",
                            "enum": [
                                "1",
                                "01",
                                "2",
                                "02",
                                "3",
                                "03",
                                "4",
                                "04",
                                "5",
                                "05"
                            ]
                        },
                        "verificationQuestionNumber": {
                            "description": "Question number of the corresponding answer.",
                            "type": "string",
                            "enum": [
                                "1",
                                "01",
                                "2",
                                "02",
                                "3",
                                "03",
                                "4",
                                "04",
                                "5",
                                "05"
                            ]
                        }
                    }
                }
            }
        }
    }
}